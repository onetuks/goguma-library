name: Pull Request CD

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    branches:
      - main

permissions: read-all

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: JDK Setup
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: zulu
          cache: 'gradle'

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Cloud Config Pull & Run
        run: |
          docker pull seyoe/cloud-config:latest
          docker run -d --name cloud-config -p 8888:8888 seyoe/cloud-config:latest

      - name: Gradle Build
        env:
          APP_NAME: ${{ secrets.APP_NAME }}
          PROFILE: ${{ secrets.PROFILE }}
          CLOUD_CONFIG_URL: ${{ secrets.CLOUD_CONFIG_URL }}
          ACTUATOR_PORT: ${{ secrets.ACTUATOR_PORT }}
        run: |
          ./gradlew build --parallel

      - name: Upload Jar
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: ./build/libs/*.jar

      - name: QEMU Setup
        uses: docker/setup-qemu-action@v3

      - name: Docker Buildx Setup
        uses: docker/setup-buildx-action@v3

      - name: Download Jar
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: .

      - name: Docker Image Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/goguma-library-server:latest

      - name: Install AWS CLI
        run: sudo apt-get install -y awscli

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Get current time
        uses: josStorer/get-current-time@v2
        id: current-time
        with:
          format: YYYYMMDD-HHmmss
          utcOffset: "+09:00"

      - name: Create Deploy File
        run: |
          zip -r app-bundle.zip docker-compose.yaml Dockerrun.aws.json

      - name: Upload docker-compose.yaml to S3
        run: |
          aws s3 cp app-bundle.zip s3://${{ secrets.EB_S3_BUCKET }}/deploy-files/v${{ steps.current-time.outputs.formattedTime }}-app-bundle.zip

      - name: Create new application version
        run: |
          echo version-label: v${{ steps.current-time.outputs.formattedTime }}
          aws elasticbeanstalk create-application-version \
            --application-name ${{ secrets.EB_APP_NAME }} \
            --version-label v${{ steps.current-time.outputs.formattedTime }} \
            --source-bundle S3Bucket=${{ secrets.EB_S3_BUCKET }},S3Key=deploy-files/v${{ steps.current-time.outputs.formattedTime }}-app-bundle.zip

      - name: Update Elastic Beanstalk environment
        run: |
          aws elasticbeanstalk update-environment \
            --application-name ${{ secrets.EB_APP_NAME }} \
            --environment-name ${{ secrets.EB_ENV_NAME }} \
            --version-label v${{ steps.current-time.outputs.formattedTime }}
