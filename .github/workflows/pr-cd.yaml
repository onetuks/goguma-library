name: Pull Request CD

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    branches:
      - main

permissions: read-all

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: JDK Setup
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: zulu
          cache: 'gradle'

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Cloud Config Pull & Run
        run: |
          docker pull seyoe/cloud-config:latest
          docker run -d --name cloud-config -p 8888:8888 seyoe/cloud-config:latest

      - name: Gradle Build
        env:
          APP_NAME: ${{ secrets.APP_NAME }}
          PROFILE: ${{ secrets.PROFILE }}
          CLOUD_CONFIG_URL: ${{ secrets.CLOUD_CONFIG_URL }}
          ACTUATOR_PORT: ${{ secrets.ACTUATOR_PORT }}
        run: |
          ./gradlew build --parallel

      - name: Upload Jar
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: ./build/libs/*.jar

      - name: QEMU Setup
        uses: docker/setup-qemu-action@v3

      - name: Docker Buildx Setup
        uses: docker/setup-buildx-action@v3

      - name: Download Jar
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: .

      - name: Docker Image Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/goguma-library-server:latest

      - name: Generate Version Label
        id: version_label
        run: echo "version_label=$(date +'%Y%m%d%H%M%S')-${{ github.sha }}" >> $GITHUB_ENV

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: goguma-library-server
          environment_name: Goguma-library-server-env
          version_label: ${{ env.version_label }}
          region: ap-northeast-2
          deployment_package: Dockerrun.aws.json
          wait_for_environment_recovery: 180
